<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Chia-Tse Site</title>
    <link>https://ricky40403.github.io/post/</link>
    <description>Recent content in Posts on Chia-Tse Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 May 2020 23:22:10 +0800</lastBuildDate>
    
	<atom:link href="https://ricky40403.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pytorch C&#43;&#43; Front</title>
      <link>https://ricky40403.github.io/2020/05/pytorch-c-front/</link>
      <pubDate>Sat, 02 May 2020 23:22:10 +0800</pubDate>
      
      <guid>https://ricky40403.github.io/2020/05/pytorch-c-front/</guid>
      <description>Sometimes we need an efficiency, low latency enviroment to run our model.
Also, most of the embedded system is written in C/C++, the C++ front can makeC++ developers directly use C++ to build their pytorch model as well.
You could reference the official installing guide to build the example.
 The design of the C++ front-end follow the following rules:
  Closely model the Python frontend in its design:</description>
    </item>
    
  </channel>
</rss>